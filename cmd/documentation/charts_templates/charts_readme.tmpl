 {{define "charts" -}}
{{template "header" .}}
## Current Features for {{.Name}}

#### Current Features for chart package

+ Generate Timeseries Chat from OHLCV Data
+ Generate Standard chart from time/value Data
+ Output to HTML
+ Serve over HTTP
+ GCTScript links

+ Coding example

```go
import "github.com/thrasher-corp/gocryptotrader/charts"

func genIntervalData(totalCandles int) []IntervalData {
	start := time.Date(2019, 1, 1, 0, 0, 0, 0, time.UTC)
	out := make([]IntervalData, totalCandles)
	out[0] = IntervalData{Timestamp: start.Format("2006-01-02"), Value: 0}
	for x := 1; x < totalCandles; x++ {
		out[x] = IntervalData{
			Timestamp: start.Add(time.Hour * 24 * time.Duration(x)).Format("2006-01-02"),
			Value:     out[x-1].Value + rand.Float64(),
		}
	}

	return out
}


func TestCharts(t *testing.T) {
	c := &Chart{
		template:     "timeseries.tmpl",
	}

	c.Data.Data = genIntervalData(365)
	_,err := c.ToFile().Generate()

	if err != nil {
	    t.Fatal(err)
	}
}
```


### Please click GoDocs chevron above to view current GoDoc information for this package
{{template "contributions"}}
{{template "donations" .}}
{{end}}
